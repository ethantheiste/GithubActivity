The librarian sat in his office and pondered. He had a problem on his hands, and he wasn't quite sure how to solve it. He had 11,000 or so unique books in his library, and no efficient way to digitally catalog them. He had considered implementing a linked list, or a binary search tree, but the runtime complexity would have been too large for the immense size of his collection. And what if mulitple books had the same title or author? A binary search tree might not be able to differentiate between them. He needed an efficient and effective solution as soon as possible, otherwise his library would be forced to shut down and his family would starve. 
Using the hash table, the Librarian could run each book through a hash function, giving it a unique has key. He could then pair this key with the data he ran through the function to make a key/value pair in which he could store his library. Even though he had a lot of books, he knew a hash table was the correct method for the job. He knew that if the hash table approached a certain load factor, that he could expand the table to increase efficiency. 
Once he came to this conclusion, he knew there was only one group for the job. He contacted his longtime business partner Florian at the University of Wisconsin and convinced him to assign his hash table problem to his CS400 students. With this previously untapped labor pool, he was able to utilise 8 (soon to be 6) students to create his library catalog system for absolutely free. When he recieved his hash table on the night of their due date, he was able to catalong thousands of books in mere seconds. The library was saved! The librarian and his family lived happily ever after.
